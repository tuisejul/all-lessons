from threading import Thread, Lock
from time import sleep

lock = Lock()
class Knight(Thread):
    def __init__(self, name, power):
        super(Knight, self).__init__()
        self.name = name
        self.power = power

    def run(self):
        print(f'{self.name}, на нас напали!', flush=True)
        quantity_warriors = 100
        counter_days = 0
        while quantity_warriors > 0:
            quantity_warriors -= min(self.power, quantity_warriors)
            counter_days += 1
            sleep(1)
            with lock:
                print(f'{self.name} сражается {counter_days} дней(дня)..., осталось {quantity_warriors} воинов', flush=True)
        with lock:
            print(f'{self.name} одержал победу спустя {counter_days} дней(дня)!', flush=True)

first_knight = Knight('Sir Lancelot', 10)
second_knight = Knight("Sir Galahad", 20)
first_knight.start()
second_knight.start()

first_knight.join()
second_knight.join()
print('Все битвы закончились!')
